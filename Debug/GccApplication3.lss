
GccApplication3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000026  00800100  0000049c  00000530  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000049c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000016  00800126  00800126  00000556  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000556  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00000588  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  000005c8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00000bab  00000000  00000000  00000640  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000077e  00000000  00000000  000011eb  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000004fe  00000000  00000000  00001969  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000180  00000000  00000000  00001e68  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000004f6  00000000  00000000  00001fe8  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000395  00000000  00000000  000024de  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  00002873  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 68 00 	jmp	0xd0	; 0xd0 <__vector_1>
   8:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
   c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  10:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  14:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  18:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  1c:	0c 94 0d 02 	jmp	0x41a	; 0x41a <__vector_7>
  20:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  24:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  28:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  2c:	0c 94 cd 01 	jmp	0x39a	; 0x39a <__vector_11>
  30:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  34:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  38:	0c 94 15 01 	jmp	0x22a	; 0x22a <__vector_14>
  3c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  40:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  44:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  48:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  4c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  50:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  54:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  58:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  5c:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  60:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>
  64:	0c 94 51 00 	jmp	0xa2	; 0xa2 <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61

00000074 <__do_copy_data>:
  74:	11 e0       	ldi	r17, 0x01	; 1
  76:	a0 e0       	ldi	r26, 0x00	; 0
  78:	b1 e0       	ldi	r27, 0x01	; 1
  7a:	ec e9       	ldi	r30, 0x9C	; 156
  7c:	f4 e0       	ldi	r31, 0x04	; 4
  7e:	02 c0       	rjmp	.+4      	; 0x84 <__do_copy_data+0x10>
  80:	05 90       	lpm	r0, Z+
  82:	0d 92       	st	X+, r0
  84:	a6 32       	cpi	r26, 0x26	; 38
  86:	b1 07       	cpc	r27, r17
  88:	d9 f7       	brne	.-10     	; 0x80 <__do_copy_data+0xc>

0000008a <__do_clear_bss>:
  8a:	21 e0       	ldi	r18, 0x01	; 1
  8c:	a6 e2       	ldi	r26, 0x26	; 38
  8e:	b1 e0       	ldi	r27, 0x01	; 1
  90:	01 c0       	rjmp	.+2      	; 0x94 <.do_clear_bss_start>

00000092 <.do_clear_bss_loop>:
  92:	1d 92       	st	X+, r1

00000094 <.do_clear_bss_start>:
  94:	ac 33       	cpi	r26, 0x3C	; 60
  96:	b2 07       	cpc	r27, r18
  98:	e1 f7       	brne	.-8      	; 0x92 <.do_clear_bss_loop>
  9a:	0e 94 2e 02 	call	0x45c	; 0x45c <main>
  9e:	0c 94 4c 02 	jmp	0x498	; 0x498 <_exit>

000000a2 <__bad_interrupt>:
  a2:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000000a6 <int0_setup>:
		// turn on CTC mode
		TCCR1B |= (1 << WGM12);
		// Set CS12, CS11 and CS10 bits for 1 prescaler
		TCCR1B |= (0 << CS12) | (0 << CS11) | (1 << CS10);
		// enable timer compare interrupt
		TIMSK1 |= (1 << OCIE1A);
  a6:	51 98       	cbi	0x0a, 1	; 10
  a8:	e9 e6       	ldi	r30, 0x69	; 105
  aa:	f0 e0       	ldi	r31, 0x00	; 0
  ac:	10 82       	st	Z, r1
  ae:	80 81       	ld	r24, Z
  b0:	81 60       	ori	r24, 0x01	; 1
  b2:	80 83       	st	Z, r24
  b4:	e8 9a       	sbi	0x1d, 0	; 29
  b6:	08 95       	ret

000000b8 <timer0_setup>:
  b8:	14 bc       	out	0x24, r1	; 36
  ba:	15 bc       	out	0x25, r1	; 37
  bc:	16 bc       	out	0x26, r1	; 38
  be:	8f e9       	ldi	r24, 0x9F	; 159
  c0:	87 bd       	out	0x27, r24	; 39
  c2:	85 b5       	in	r24, 0x25	; 37
  c4:	82 60       	ori	r24, 0x02	; 2
  c6:	85 bd       	out	0x25, r24	; 37
  c8:	85 b5       	in	r24, 0x25	; 37
  ca:	81 60       	ori	r24, 0x01	; 1
  cc:	85 bd       	out	0x25, r24	; 37
  ce:	08 95       	ret

000000d0 <__vector_1>:
volatile unsigned int test_unghi_dorit = 0xFF;
volatile int ind = 0;
volatile unsigned int cinci_grade = 0xFF;


ISR(INT0_vect){
  d0:	1f 92       	push	r1
  d2:	0f 92       	push	r0
  d4:	0f b6       	in	r0, 0x3f	; 63
  d6:	0f 92       	push	r0
  d8:	11 24       	eor	r1, r1
  da:	2f 93       	push	r18
  dc:	3f 93       	push	r19
  de:	4f 93       	push	r20
  e0:	6f 93       	push	r22
  e2:	7f 93       	push	r23
  e4:	8f 93       	push	r24
  e6:	9f 93       	push	r25
  e8:	af 93       	push	r26
  ea:	bf 93       	push	r27
  ec:	ef 93       	push	r30
  ee:	ff 93       	push	r31
	count_timer0_interupts++;
  f0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_timer0_interupts>
  f4:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
  f8:	01 96       	adiw	r24, 0x01	; 1
  fa:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <count_timer0_interupts+0x1>
  fe:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <count_timer0_interupts>
	switch(state)
 102:	80 91 28 01 	lds	r24, 0x0128	; 0x800128 <state>
 106:	81 30       	cpi	r24, 0x01	; 1
 108:	09 f4       	brne	.+2      	; 0x10c <__vector_1+0x3c>
 10a:	62 c0       	rjmp	.+196    	; 0x1d0 <__vector_1+0x100>
 10c:	08 f4       	brcc	.+2      	; 0x110 <__vector_1+0x40>
 10e:	71 c0       	rjmp	.+226    	; 0x1f2 <__vector_1+0x122>
 110:	82 30       	cpi	r24, 0x02	; 2
 112:	09 f0       	breq	.+2      	; 0x116 <__vector_1+0x46>
 114:	76 c0       	rjmp	.+236    	; 0x202 <__vector_1+0x132>
	{
		case exec:
			if(count_timer0_interupts > sensorDelay)
 116:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <count_timer0_interupts>
 11a:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
 11e:	80 91 38 01 	lds	r24, 0x0138	; 0x800138 <sensorDelay>
 122:	90 91 39 01 	lds	r25, 0x0139	; 0x800139 <sensorDelay+0x1>
 126:	82 17       	cp	r24, r18
 128:	93 07       	cpc	r25, r19
 12a:	08 f0       	brcs	.+2      	; 0x12e <__vector_1+0x5e>
 12c:	6a c0       	rjmp	.+212    	; 0x202 <__vector_1+0x132>
			{
				if((toggle = !toggle))
 12e:	80 91 04 01 	lds	r24, 0x0104	; 0x800104 <toggle>
 132:	90 91 05 01 	lds	r25, 0x0105	; 0x800105 <toggle+0x1>
 136:	21 e0       	ldi	r18, 0x01	; 1
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	00 97       	sbiw	r24, 0x00	; 0
 13c:	11 f0       	breq	.+4      	; 0x142 <__vector_1+0x72>
 13e:	20 e0       	ldi	r18, 0x00	; 0
 140:	30 e0       	ldi	r19, 0x00	; 0
 142:	30 93 05 01 	sts	0x0105, r19	; 0x800105 <toggle+0x1>
 146:	20 93 04 01 	sts	0x0104, r18	; 0x800104 <toggle>
 14a:	89 2b       	or	r24, r25
 14c:	49 f4       	brne	.+18     	; 0x160 <__vector_1+0x90>
				{
					time_spend_high = count_timer0_interupts;
 14e:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_timer0_interupts>
 152:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
 156:	90 93 33 01 	sts	0x0133, r25	; 0x800133 <time_spend_high+0x1>
 15a:	80 93 32 01 	sts	0x0132, r24	; 0x800132 <time_spend_high>
 15e:	51 c0       	rjmp	.+162    	; 0x202 <__vector_1+0x132>
				}
				else
				{
					time_spend_low = count_timer0_interupts;
 160:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_timer0_interupts>
 164:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
 168:	90 93 35 01 	sts	0x0135, r25	; 0x800135 <time_spend_low+0x1>
 16c:	80 93 34 01 	sts	0x0134, r24	; 0x800134 <time_spend_low>
					cinci_grade = (time_spend_low/72);
 170:	20 91 34 01 	lds	r18, 0x0134	; 0x800134 <time_spend_low>
 174:	30 91 35 01 	lds	r19, 0x0135	; 0x800135 <time_spend_low+0x1>
 178:	af e8       	ldi	r26, 0x8F	; 143
 17a:	b3 ee       	ldi	r27, 0xE3	; 227
 17c:	0e 94 3d 02 	call	0x47a	; 0x47a <__umulhisi3>
 180:	00 24       	eor	r0, r0
 182:	88 0f       	add	r24, r24
 184:	99 1f       	adc	r25, r25
 186:	00 1c       	adc	r0, r0
 188:	88 0f       	add	r24, r24
 18a:	99 1f       	adc	r25, r25
 18c:	00 1c       	adc	r0, r0
 18e:	89 2f       	mov	r24, r25
 190:	90 2d       	mov	r25, r0
 192:	90 93 01 01 	sts	0x0101, r25	; 0x800101 <__data_start+0x1>
 196:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
					ungiActual = cinci_grade;
 19a:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
 19e:	90 91 01 01 	lds	r25, 0x0101	; 0x800101 <__data_start+0x1>
 1a2:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <ungiActual+0x1>
 1a6:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ungiActual>
					ungiDorit = cinci_grade*36;
 1aa:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 1ae:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 1b2:	44 e2       	ldi	r20, 0x24	; 36
 1b4:	42 9f       	mul	r20, r18
 1b6:	c0 01       	movw	r24, r0
 1b8:	43 9f       	mul	r20, r19
 1ba:	90 0d       	add	r25, r0
 1bc:	11 24       	eor	r1, r1
 1be:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <ungiDorit+0x1>
 1c2:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <ungiDorit>
					ind = 0;
 1c6:	10 92 27 01 	sts	0x0127, r1	; 0x800127 <__data_end+0x1>
 1ca:	10 92 26 01 	sts	0x0126, r1	; 0x800126 <__data_end>
 1ce:	19 c0       	rjmp	.+50     	; 0x202 <__vector_1+0x132>
					
				}
			}
			break;
		case calib:
			sensorDelay = count_timer0_interupts*3;
 1d0:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_timer0_interupts>
 1d4:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
 1d8:	9c 01       	movw	r18, r24
 1da:	22 0f       	add	r18, r18
 1dc:	33 1f       	adc	r19, r19
 1de:	82 0f       	add	r24, r18
 1e0:	93 1f       	adc	r25, r19
 1e2:	90 93 39 01 	sts	0x0139, r25	; 0x800139 <sensorDelay+0x1>
 1e6:	80 93 38 01 	sts	0x0138, r24	; 0x800138 <sensorDelay>
			state = exec;
 1ea:	82 e0       	ldi	r24, 0x02	; 2
 1ec:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <state>
			break;
 1f0:	08 c0       	rjmp	.+16     	; 0x202 <__vector_1+0x132>
		case init:
			TIMSK0 |= (1 << OCIE0A);
 1f2:	ee e6       	ldi	r30, 0x6E	; 110
 1f4:	f0 e0       	ldi	r31, 0x00	; 0
 1f6:	80 81       	ld	r24, Z
 1f8:	82 60       	ori	r24, 0x02	; 2
 1fa:	80 83       	st	Z, r24
			state = calib;
 1fc:	81 e0       	ldi	r24, 0x01	; 1
 1fe:	80 93 28 01 	sts	0x0128, r24	; 0x800128 <state>
			break;
	}
	//cuvant = count_int0_interrupts;
	count_timer0_interupts = 0;
 202:	10 92 2b 01 	sts	0x012B, r1	; 0x80012b <count_timer0_interupts+0x1>
 206:	10 92 2a 01 	sts	0x012A, r1	; 0x80012a <count_timer0_interupts>

}
 20a:	ff 91       	pop	r31
 20c:	ef 91       	pop	r30
 20e:	bf 91       	pop	r27
 210:	af 91       	pop	r26
 212:	9f 91       	pop	r25
 214:	8f 91       	pop	r24
 216:	7f 91       	pop	r23
 218:	6f 91       	pop	r22
 21a:	4f 91       	pop	r20
 21c:	3f 91       	pop	r19
 21e:	2f 91       	pop	r18
 220:	0f 90       	pop	r0
 222:	0f be       	out	0x3f, r0	; 63
 224:	0f 90       	pop	r0
 226:	1f 90       	pop	r1
 228:	18 95       	reti

0000022a <__vector_14>:


ISR(TIMER0_COMPA_vect){
 22a:	1f 92       	push	r1
 22c:	0f 92       	push	r0
 22e:	0f b6       	in	r0, 0x3f	; 63
 230:	0f 92       	push	r0
 232:	11 24       	eor	r1, r1
 234:	2f 93       	push	r18
 236:	3f 93       	push	r19
 238:	8f 93       	push	r24
 23a:	9f 93       	push	r25
 23c:	ef 93       	push	r30
 23e:	ff 93       	push	r31
	++count_timer0_interupts;
 240:	80 91 2a 01 	lds	r24, 0x012A	; 0x80012a <count_timer0_interupts>
 244:	90 91 2b 01 	lds	r25, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
 248:	01 96       	adiw	r24, 0x01	; 1
 24a:	90 93 2b 01 	sts	0x012B, r25	; 0x80012b <count_timer0_interupts+0x1>
 24e:	80 93 2a 01 	sts	0x012A, r24	; 0x80012a <count_timer0_interupts>
	if(count_timer0_interupts == ungiActual)
 252:	20 91 2a 01 	lds	r18, 0x012A	; 0x80012a <count_timer0_interupts>
 256:	30 91 2b 01 	lds	r19, 0x012B	; 0x80012b <count_timer0_interupts+0x1>
 25a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <ungiActual>
 25e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <ungiActual+0x1>
 262:	28 17       	cp	r18, r24
 264:	39 07       	cpc	r19, r25
 266:	09 f0       	breq	.+2      	; 0x26a <__vector_14+0x40>
 268:	8b c0       	rjmp	.+278    	; 0x380 <__vector_14+0x156>
	{
		if(ungiActual == ungiDorit)
 26a:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <ungiActual>
 26e:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <ungiActual+0x1>
 272:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <ungiDorit>
 276:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <ungiDorit+0x1>
 27a:	28 17       	cp	r18, r24
 27c:	39 07       	cpc	r19, r25
 27e:	09 f0       	breq	.+2      	; 0x282 <__vector_14+0x58>
 280:	70 c0       	rjmp	.+224    	; 0x362 <__vector_14+0x138>
		{
			if(ind < 7)
 282:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 286:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 28a:	07 97       	sbiw	r24, 0x07	; 7
 28c:	94 f4       	brge	.+36     	; 0x2b2 <__vector_14+0x88>
			{
				cuvant = M[ind++];
 28e:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 292:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 296:	9c 01       	movw	r18, r24
 298:	2f 5f       	subi	r18, 0xFF	; 255
 29a:	3f 4f       	sbci	r19, 0xFF	; 255
 29c:	30 93 27 01 	sts	0x0127, r19	; 0x800127 <__data_end+0x1>
 2a0:	20 93 26 01 	sts	0x0126, r18	; 0x800126 <__data_end>
 2a4:	fc 01       	movw	r30, r24
 2a6:	ef 5e       	subi	r30, 0xEF	; 239
 2a8:	fe 4f       	sbci	r31, 0xFE	; 254
 2aa:	80 81       	ld	r24, Z
 2ac:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <cuvant>
 2b0:	4a c0       	rjmp	.+148    	; 0x346 <__vector_14+0x11c>
			}
			else
			{
				if(ind < 14)
 2b2:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 2b6:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 2ba:	0e 97       	sbiw	r24, 0x0e	; 14
 2bc:	9c f4       	brge	.+38     	; 0x2e4 <__vector_14+0xba>
				{
					cuvant = U[ind-7];
 2be:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__data_end>
 2c2:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <__data_end+0x1>
 2c6:	ed 5f       	subi	r30, 0xFD	; 253
 2c8:	fe 4f       	sbci	r31, 0xFE	; 254
 2ca:	80 81       	ld	r24, Z
 2cc:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <cuvant>
					++ind;
 2d0:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 2d4:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 2d8:	01 96       	adiw	r24, 0x01	; 1
 2da:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 2de:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 2e2:	31 c0       	rjmp	.+98     	; 0x346 <__vector_14+0x11c>
				}
				else
					if(ind < 21)
 2e4:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 2e8:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 2ec:	45 97       	sbiw	r24, 0x15	; 21
 2ee:	9c f4       	brge	.+38     	; 0x316 <__vector_14+0xec>
					{
						cuvant = I[ind-14];
 2f0:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__data_end>
 2f4:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <__data_end+0x1>
 2f8:	e6 5f       	subi	r30, 0xF6	; 246
 2fa:	fe 4f       	sbci	r31, 0xFE	; 254
 2fc:	80 81       	ld	r24, Z
 2fe:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <cuvant>
						++ind;
 302:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 306:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 30a:	01 96       	adiw	r24, 0x01	; 1
 30c:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 310:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
 314:	18 c0       	rjmp	.+48     	; 0x346 <__vector_14+0x11c>
					}
					else
						if(ind < 28)
 316:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 31a:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 31e:	4c 97       	sbiw	r24, 0x1c	; 28
 320:	94 f4       	brge	.+36     	; 0x346 <__vector_14+0x11c>
						{
							cuvant = E[ind-21];
 322:	e0 91 26 01 	lds	r30, 0x0126	; 0x800126 <__data_end>
 326:	f0 91 27 01 	lds	r31, 0x0127	; 0x800127 <__data_end+0x1>
 32a:	e6 5f       	subi	r30, 0xF6	; 246
 32c:	fe 4f       	sbci	r31, 0xFE	; 254
 32e:	80 81       	ld	r24, Z
 330:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <cuvant>
							++ind;
 334:	80 91 26 01 	lds	r24, 0x0126	; 0x800126 <__data_end>
 338:	90 91 27 01 	lds	r25, 0x0127	; 0x800127 <__data_end+0x1>
 33c:	01 96       	adiw	r24, 0x01	; 1
 33e:	90 93 27 01 	sts	0x0127, r25	; 0x800127 <__data_end+0x1>
 342:	80 93 26 01 	sts	0x0126, r24	; 0x800126 <__data_end>
						}
			}
			ungiDorit += cinci_grade;
 346:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 34a:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 34e:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <ungiDorit>
 352:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <ungiDorit+0x1>
 356:	82 0f       	add	r24, r18
 358:	93 1f       	adc	r25, r19
 35a:	90 93 07 01 	sts	0x0107, r25	; 0x800107 <ungiDorit+0x1>
 35e:	80 93 06 01 	sts	0x0106, r24	; 0x800106 <ungiDorit>
		}
		ungiActual += cinci_grade;
 362:	20 91 00 01 	lds	r18, 0x0100	; 0x800100 <__data_start>
 366:	30 91 01 01 	lds	r19, 0x0101	; 0x800101 <__data_start+0x1>
 36a:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <ungiActual>
 36e:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <ungiActual+0x1>
 372:	82 0f       	add	r24, r18
 374:	93 1f       	adc	r25, r19
 376:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <ungiActual+0x1>
 37a:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ungiActual>
 37e:	02 c0       	rjmp	.+4      	; 0x384 <__vector_14+0x15a>
		
		
	}
	else
	{
		cuvant = 0;
 380:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <cuvant>
	}
	
}
 384:	ff 91       	pop	r31
 386:	ef 91       	pop	r30
 388:	9f 91       	pop	r25
 38a:	8f 91       	pop	r24
 38c:	3f 91       	pop	r19
 38e:	2f 91       	pop	r18
 390:	0f 90       	pop	r0
 392:	0f be       	out	0x3f, r0	; 63
 394:	0f 90       	pop	r0
 396:	1f 90       	pop	r1
 398:	18 95       	reti

0000039a <__vector_11>:

ISR(TIMER1_COMPA_vect){
 39a:	1f 92       	push	r1
 39c:	0f 92       	push	r0
 39e:	0f b6       	in	r0, 0x3f	; 63
 3a0:	0f 92       	push	r0
 3a2:	11 24       	eor	r1, r1
 3a4:	2f 93       	push	r18
 3a6:	3f 93       	push	r19
 3a8:	8f 93       	push	r24
 3aa:	9f 93       	push	r25
	if(++count_timer1_interupts == perioada_dintre_litere)
 3ac:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <count_timer1_interupts>
 3b0:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <count_timer1_interupts+0x1>
 3b4:	01 96       	adiw	r24, 0x01	; 1
 3b6:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <count_timer1_interupts+0x1>
 3ba:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <count_timer1_interupts>
 3be:	20 91 02 01 	lds	r18, 0x0102	; 0x800102 <perioada_dintre_litere>
 3c2:	30 91 03 01 	lds	r19, 0x0103	; 0x800103 <perioada_dintre_litere+0x1>
 3c6:	82 17       	cp	r24, r18
 3c8:	93 07       	cpc	r25, r19
 3ca:	69 f4       	brne	.+26     	; 0x3e6 <__vector_11+0x4c>
	{
		count_timer1_interupts = 0;
 3cc:	10 92 2d 01 	sts	0x012D, r1	; 0x80012d <count_timer1_interupts+0x1>
 3d0:	10 92 2c 01 	sts	0x012C, r1	; 0x80012c <count_timer1_interupts>
		ungiActual++;
 3d4:	80 91 08 01 	lds	r24, 0x0108	; 0x800108 <ungiActual>
 3d8:	90 91 09 01 	lds	r25, 0x0109	; 0x800109 <ungiActual+0x1>
 3dc:	01 96       	adiw	r24, 0x01	; 1
 3de:	90 93 09 01 	sts	0x0109, r25	; 0x800109 <ungiActual+0x1>
 3e2:	80 93 08 01 	sts	0x0108, r24	; 0x800108 <ungiActual>
	}
	if(ungiActual == ungiDorit)
 3e6:	20 91 08 01 	lds	r18, 0x0108	; 0x800108 <ungiActual>
 3ea:	30 91 09 01 	lds	r19, 0x0109	; 0x800109 <ungiActual+0x1>
 3ee:	80 91 06 01 	lds	r24, 0x0106	; 0x800106 <ungiDorit>
 3f2:	90 91 07 01 	lds	r25, 0x0107	; 0x800107 <ungiDorit+0x1>
 3f6:	28 17       	cp	r18, r24
 3f8:	39 07       	cpc	r19, r25
 3fa:	21 f4       	brne	.+8      	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
	{
		cuvant = 0xFF;
 3fc:	8f ef       	ldi	r24, 0xFF	; 255
 3fe:	80 93 29 01 	sts	0x0129, r24	; 0x800129 <cuvant>
 402:	02 c0       	rjmp	.+4      	; 0x408 <__LOCK_REGION_LENGTH__+0x8>
	}
	else
	{
		cuvant = 0;	
 404:	10 92 29 01 	sts	0x0129, r1	; 0x800129 <cuvant>
	}
}
 408:	9f 91       	pop	r25
 40a:	8f 91       	pop	r24
 40c:	3f 91       	pop	r19
 40e:	2f 91       	pop	r18
 410:	0f 90       	pop	r0
 412:	0f be       	out	0x3f, r0	; 63
 414:	0f 90       	pop	r0
 416:	1f 90       	pop	r1
 418:	18 95       	reti

0000041a <__vector_7>:

ISR(TIMER2_COMPA_vect){
 41a:	1f 92       	push	r1
 41c:	0f 92       	push	r0
 41e:	0f b6       	in	r0, 0x3f	; 63
 420:	0f 92       	push	r0
 422:	11 24       	eor	r1, r1
 424:	8f 93       	push	r24
 426:	9f 93       	push	r25
	++count_timer1_interupts;
 428:	80 91 2c 01 	lds	r24, 0x012C	; 0x80012c <count_timer1_interupts>
 42c:	90 91 2d 01 	lds	r25, 0x012D	; 0x80012d <count_timer1_interupts+0x1>
 430:	01 96       	adiw	r24, 0x01	; 1
 432:	90 93 2d 01 	sts	0x012D, r25	; 0x80012d <count_timer1_interupts+0x1>
 436:	80 93 2c 01 	sts	0x012C, r24	; 0x80012c <count_timer1_interupts>
	
}
 43a:	9f 91       	pop	r25
 43c:	8f 91       	pop	r24
 43e:	0f 90       	pop	r0
 440:	0f be       	out	0x3f, r0	; 63
 442:	0f 90       	pop	r0
 444:	1f 90       	pop	r1
 446:	18 95       	reti

00000448 <scrie>:
#include "handlerFile.h"

volatile char cuvant = 0;

void scrie(char txt){
	PORTB = (txt >> 2);
 448:	98 2f       	mov	r25, r24
 44a:	96 95       	lsr	r25
 44c:	96 95       	lsr	r25
 44e:	95 b9       	out	0x05, r25	; 5
	PORTD = (txt << 6);
 450:	82 95       	swap	r24
 452:	88 0f       	add	r24, r24
 454:	88 0f       	add	r24, r24
 456:	80 7c       	andi	r24, 0xC0	; 192
 458:	8b b9       	out	0x0b, r24	; 11
 45a:	08 95       	ret

0000045c <main>:
}

int main(void)
{
	cli();
 45c:	f8 94       	cli
	DDRB = 0b00011111;
 45e:	8f e1       	ldi	r24, 0x1F	; 31
 460:	84 b9       	out	0x04, r24	; 4
	DDRD = 0b11000000;
 462:	80 ec       	ldi	r24, 0xC0	; 192
 464:	8a b9       	out	0x0a, r24	; 10
	int0_setup();
 466:	0e 94 53 00 	call	0xa6	; 0xa6 <int0_setup>
	timer0_setup();
 46a:	0e 94 5c 00 	call	0xb8	; 0xb8 <timer0_setup>
//	timer2_setup();
//	timer1_setup();
//	getList("A");
	sei();
 46e:	78 94       	sei
	while (1) {
		scrie(cuvant);
 470:	80 91 29 01 	lds	r24, 0x0129	; 0x800129 <cuvant>
 474:	0e 94 24 02 	call	0x448	; 0x448 <scrie>
 478:	fb cf       	rjmp	.-10     	; 0x470 <main+0x14>

0000047a <__umulhisi3>:
 47a:	a2 9f       	mul	r26, r18
 47c:	b0 01       	movw	r22, r0
 47e:	b3 9f       	mul	r27, r19
 480:	c0 01       	movw	r24, r0
 482:	a3 9f       	mul	r26, r19
 484:	70 0d       	add	r23, r0
 486:	81 1d       	adc	r24, r1
 488:	11 24       	eor	r1, r1
 48a:	91 1d       	adc	r25, r1
 48c:	b2 9f       	mul	r27, r18
 48e:	70 0d       	add	r23, r0
 490:	81 1d       	adc	r24, r1
 492:	11 24       	eor	r1, r1
 494:	91 1d       	adc	r25, r1
 496:	08 95       	ret

00000498 <_exit>:
 498:	f8 94       	cli

0000049a <__stop_program>:
 49a:	ff cf       	rjmp	.-2      	; 0x49a <__stop_program>
