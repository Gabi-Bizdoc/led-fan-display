/*
 * IncFile1.h
 *
 * Created: 16.01.2019 01:36:28
 *  Author: Gabi
 */ 


#ifndef INCFILE1_H_
#define INCFILE1_H_

#include <stdlib.h>

char A[7] = {
	0b0000011,
	0b0000110,
	0b0111100,
	0b1100100,
	0b0011100,
	0b0000110,
	0b0000011
};

char B[7] = {
	0b0000001,
	0b0111111,
	0b1001001,
	0b1001001,
	0b1111011,
	0b0001110,
	0b0000000
};

char C[7] = {
	0b0000000,
	0b0111110,
	0b1100011,
	0b1000001,
	0b1100001,
	0b0100110,
	0b0000000
};

char D[7] = {
	0b0000011,
	0b1111111,
	0b1000001,
	0b1000001,
	0b1100011,
	0b0111110,
	0b0000000
};

char E[7] = {
	0b0000001,
	0b0111111,
	0b1101001,
	0b1001001,
	0b1001001,
	0b0001001,
	0b0000001
};

char F[7] = {
	0b0000000,
	0b0001111,
	0b1111100,
	0b1001000,
	0b1001000,
	0b0000000,
	0b0000000
};

char G[7] = {
	0b0001100,
	0b0111110,
	0b1100011,
	0b1001001,
	0b1101001,
	0b0101111,
	0b0000110
};

char H[7] = {
	0b0000011,
	0b1111111,
	0b0001000,
	0b0001000,
	0b1001000,
	0b0111111,
	0b0000001
};

char I[7] = {
	0b0000000,
	0b0000000,
	0b0000000,
	0b1111111,
	0b0000000,
	0b0000000,
	0b0000000
};

char J[7] = {
	0b0000000,
	0b0000110,
	0b0000011,
	0b0000001,
	0b1111111,
	0b0000000,
	0b0000000
};

char K[7] = {
	0b0000001,
	0b0111111,
	0b1001000,
	0b0011100,
	0b1100110,
	0b1000011,
	0b0000001
};

char L[7] = {
	0b0000000,
	0b0000111,
	0b1111111,
	0b0000001,
	0b0000001,
	0b0000001,
	0b0000000
};

char M[7] = {
	0b0001111,
	0b1111000,
	0b0111110,
	0b0000011,
	0b0111100,
	0b1111100,
	0b0000111
};

char N[7] = {
	0b0000011,
	0b1111111,
	0b1110000,
	0b0001100,
	0b1000110,
	0b0111111,
	0b0000001
};

char O[7] = {
	0b0001100,
	0b0111110,
	0b1100001,
	0b1000001,
	0b1100011,
	0b0111110,
	0b0000000
};

char P[7] = {
	0b0000001,
	0b0111111,
	0b1001000,
	0b1001000,
	0b1101000,
	0b0110000,
	0b0000000
};

char Q[7] = {
	0b0001100,
	0b0111111,
	0b1100001,
	0b1000011,
	0b1100011,
	0b0111111,
	0b0000001
};

char R[7] = {
	0b0000011,
	0b1111111,
	0b1001000,
	0b1001000,
	0b1101100,
	0b0110111,
	0b0000011
};

char S[7] = {
	0b0000000,
	0b0110111,
	0b1111001,
	0b1001001,
	0b1101001,
	0b0001110,
	0b0000000
};

char T[7] = {
	0b0000000,
	0b1000000,
	0b1000000,
	0b1111111,
	0b1000000,
	0b0000000,
	0b0000000
};

char U[7] = {
	0b0000000,
	0b1111111,
	0b0000001,
	0b0000001,
	0b1000011,
	0b0111110,
	0b0000000
};

char V[7] = {
	0b0000000,
	0b1100000,
	0b0011111,
	0b0000011,
	0b0111110,
	0b1100000,
	0b0000000
};

char W[7] = {
	0b1111111,
	0b0000111,
	0b0011100,
	0b1100000,
	0b0011110,
	0b0011111,
	0b1000000
};

char X[7] = {
	0b0000001,
	0b1000010,
	0b1110110,
	0b0011100,
	0b1110110,
	0b0000011,
	0b0000001
};

char Y[7] = {
	0b0000000,
	0b1000000,
	0b0111000,
	0b0001111,
	0b0110000,
	0b1000000,
	0b0000000
};

char Z[7] = {
	0b0000011,
	0b0000011,
	0b1000101,
	0b1011001,
	0b1110001,
	0b0000001,
	0b0000001
};

char* litere[] = {A, B, C, D, E, F, G, H, I, J, K, L, M, N, O, P, Q, R, S, T, U, V, W, X, Y, Z};

char* lista;
int max;

void processString(char* text){
	int i=0;
	char* output = (char*)malloc(sizeof(char)*73);
	int index=0;
	while(text[i]!='\0'){
		if(text[i] >= 'A' && text[i] <= 'Z')
		{
			for (int j=0; j<7; j++)
			{
				output[index++] = litere[text[i]-'A'][j];
			}
				
		}
		++i;
	}

	max = index;
	output[index]='\n';
	lista = output;
}

int myIndex;

char getNext(){	
	if(myIndex > max) 
			return 0;
	return lista[myIndex++];
}

void resetIndex(){
	 myIndex = 0;
	 }
	
#endif /* INCFILE1_H_ */